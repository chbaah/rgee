language: r
sudo: required
r:
- release
deploy.skip_cleanup: true

cache:
- packages
- ccache
r_github_packages:
- r-lib/covr
- r-spatial/sf
- r-spatial/stars
- r-spatial/sf
- tidyverse/dplyr
addons:
  apt:
    sources:
    - sourceline: ppa:ubuntugis/ubuntugis-unstable
    packages:
    - dpkg
    - libprotobuf-dev
    - protobuf-compiler
    - libv8-3.14-dev
    - libjq-dev
    - libudunits2-dev
    - libproj-dev
    - libgeos-dev
    - libspatialite-dev
    - libgdal-dev
    - libjson-c-dev
    - libnetcdf-dev
    - netcdf-bin
    - python3
    - python3-pip
    chrome: stable

env:
  global:
  - R_BUILD_ARGS=" --no-manual "
  - R_CHECK_ARGS=" --no-manual --as-cran --no-multiarch --no-examples"
  - _R_CHECK_FORCE_SUGGESTS_: false
before_install:
- sudo apt-get update
- R -q -e 'if (!requireNamespace("remotes")) install.packages("remotes")'
- R -q -e 'if (getRversion() < "3.2" && !requireNamespace("curl")) install.packages("curl")'
- R -q -e 'remotes::install_github("ropenscilabs/tic", upgrade = "always"); print(tic::dsl_load()); tic::prepare_all_stages()'
- R -q -e 'tic::before_install()'
install:
- sudo apt-get install python3-venv
- sudo -H pip3 install --upgrade pip
- sudo -H pip3 install setuptools
- sudo -H pip3 install virtualenv
- sudo -H pip3 install earthengine-api
- sudo -H pip3 install coveralls
- sudo -H pip3 install oauth2client
- sudo -H pip3 install numpy
- R -q -e 'tic::install()'
script:
  - R CMD build . $R_BUILD_ARGS
  - R CMD check *tar.gz $R_CHECK_ARGS
after_success:
- R -q -e 'covr::codecov(quiet = FALSE)'
before_deploy: R -q -e 'tic::before_deploy()'
deploy:
  provider: script
  script: R -q -e 'tic::deploy()'
  on:
    all_branches: true
